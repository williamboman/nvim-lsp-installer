-- THIS FILE IS GENERATED. DO NOT EDIT MANUALLY.
-- stylua: ignore start
return {properties = {["grammarly.config.documentDialect"] = {default = "auto-text",enum = { "american", "australian", "british", "canadian", "auto-text" },enumDescriptions = { "", "", "", "", "An appropriate value based on the text." },markdownDescription = "Specific variety of English being written. See [this article](https://support.grammarly.com/hc/en-us/articles/115000089992-Select-between-British-English-American-English-Canadian-English-and-Australian-English) for differences."},["grammarly.config.documentDomain"] = {default = "general",enum = { "academic", "business", "general", "mail", "casual", "creative" },enumDescriptions = { "Academic is the strictest style of writing. On top of catching grammar and punctuation issues, Grammarly will make suggestions around passive voice, contractions, and informal pronouns (I, you), and will point out unclear antecedents (e.g., sentences starting with “This is…”).", "The business style setting checks the text against formal writing criteria. However, unlike the Academic domain, it allows the use of some informal expressions, informal pronouns, and unclear antecedents.", "This is the default style and uses a medium level of strictness.", "The email genre is similar to the General domain and helps ensure that your email communication is engaging. In addition to catching grammar, spelling, and punctuation mistakes, Grammarly also points out the use of overly direct language that may sound harsh to a reader.", "Casual is designed for informal types of writing and ignores most style issues. It does not flag contractions, passive voice, informal pronouns, who-versus-whom usage, split infinitives, or run-on sentences. This style is suitable for personal communication.", "This is the most permissive style. It catches grammar, punctuation, and spelling mistakes but allows some leeway for those who want to intentionally bend grammar rules to achieve certain effects. Creative doesn’t flag sentence fragments (missing subjects or verbs), wordy sentences, colloquialisms, informal pronouns, passive voice, incomplete comparisons, or run-on sentences." },markdownDescription = "The style or type of writing to be checked. See [What is domain/document type](https://support.grammarly.com/hc/en-us/articles/115000091472-What-is-domain-document-type-)?"},["grammarly.config.suggestions.ConjunctionAtStartOfSentence"] = {default = false,description = "Flags use of conjunctions such as 'but' and 'and' at the beginning of sentences.",type = "boolean"},["grammarly.config.suggestions.Fluency"] = {default = true,description = "Suggests ways to sound more natural and fluent.",type = "boolean"},["grammarly.config.suggestions.InformalPronounsAcademic"] = {default = false,description = "Flags use of personal pronouns such as 'I' and 'you' in academic writing.",type = "boolean"},["grammarly.config.suggestions.MissingSpaces"] = {default = true,description = "Suggests adding missing spacing after a numeral when writing times.",type = "boolean"},["grammarly.config.suggestions.NounStrings"] = {default = true,description = "Flags a series of nouns that modify a final noun.",type = "boolean"},["grammarly.config.suggestions.NumbersBeginningSentences"] = {default = true,description = "Suggests spelling out numbers at the beginning of sentences.",type = "boolean"},["grammarly.config.suggestions.NumbersZeroThroughTen"] = {default = true,description = "Suggests spelling out numbers zero through ten.",type = "boolean"},["grammarly.config.suggestions.OxfordComma"] = {default = false,description = "Suggests adding the Oxford comma after the second-to-last item in a list of things.",type = "boolean"},["grammarly.config.suggestions.PassiveVoice"] = {default = false,description = "Flags use of passive voice.",type = "boolean"},["grammarly.config.suggestions.PersonFirstLanguage"] = {default = true,description = "Suggests using person-first language to refer respectfully to an individual with a disability.",type = "boolean"},["grammarly.config.suggestions.PossiblyBiasedLanguageAgeRelated"] = {default = true,description = "Suggests alternatives to potentially biased language related to older adults.",type = "boolean"},["grammarly.config.suggestions.PossiblyBiasedLanguageDisabilityRelated"] = {default = true,description = "Suggests alternatives to potentially ableist language.",type = "boolean"},["grammarly.config.suggestions.PossiblyBiasedLanguageFamilyRelated"] = {default = true,description = "Suggests alternatives to potentially biased language related to parenting and family systems.",type = "boolean"},["grammarly.config.suggestions.PossiblyBiasedLanguageGenderRelated"] = {default = true,description = "Suggests alternatives to potentially gender-biased and non-inclusive phrasing.",type = "boolean"},["grammarly.config.suggestions.PossiblyBiasedLanguageHumanRights"] = {default = true,description = "Suggests alternatives to language related to human slavery.",type = "boolean"},["grammarly.config.suggestions.PossiblyBiasedLanguageHumanRightsRelated"] = {default = true,description = "Suggests alternatives to terms with origins in the institution of slavery.",type = "boolean"},["grammarly.config.suggestions.PossiblyBiasedLanguageLgbtqiaRelated"] = {default = true,description = "Flags LGBTQIA+-related terms that may be seen as biased, outdated, or disrespectful in some contexts.",type = "boolean"},["grammarly.config.suggestions.PossiblyBiasedLanguageRaceEthnicityRelated"] = {default = true,description = "Suggests alternatives to potentially biased language related to race and ethnicity.",type = "boolean"},["grammarly.config.suggestions.PossiblyPoliticallyIncorrectLanguage"] = {default = true,description = "Suggests alternatives to language that may be considered politically incorrect.",type = "boolean"},["grammarly.config.suggestions.PrepositionAtTheEndOfSentence"] = {default = false,description = "Flags use of prepositions such as 'with' and 'in' at the end of sentences.",type = "boolean"},["grammarly.config.suggestions.PunctuationWithQuotation"] = {default = true,description = "Suggests placing punctuation before closing quotation marks.",type = "boolean"},["grammarly.config.suggestions.ReadabilityFillerwords"] = {default = true,description = "Flags long, complicated sentences that could potentially confuse your reader.",type = "boolean"},["grammarly.config.suggestions.ReadabilityTransforms"] = {default = true,description = "Suggests splitting long, complicated sentences that could potentially confuse your reader.",type = "boolean"},["grammarly.config.suggestions.SentenceVariety"] = {default = true,description = "Flags series of sentences that follow the same pattern.",type = "boolean"},["grammarly.config.suggestions.SpacesSurroundingSlash"] = {default = true,description = "Suggests removing extra spaces surrounding a slash.",type = "boolean"},["grammarly.config.suggestions.SplitInfinitive"] = {default = true,description = "Suggests rewriting split infinitives so that an adverb doesn't come between 'to' and the verb.",type = "boolean"},["grammarly.config.suggestions.StylisticFragments"] = {default = false,description = "Suggests completing all incomplete sentences, including stylistic sentence fragments that may be intentional.",type = "boolean"},["grammarly.config.suggestions.UnnecessaryEllipses"] = {default = false,description = "Flags unnecessary use of ellipses (...).",type = "boolean"},["grammarly.config.suggestions.Variety"] = {default = true,description = "Suggests alternatives to words that occur frequently in the same paragraph.",type = "boolean"},["grammarly.config.suggestions.Vocabulary"] = {default = true,description = "Suggests alternatives to bland and overused words such as 'good' and 'nice'.",type = "boolean"},["grammarly.patterns"] = {default = { "**/readme.md", "**/README.md", "**/*.txt" },description = "A glob pattern, like `*.{md,txt}` for file scheme.",items = {type = "string"},required = true,type = "array"},["grammarly.selectors"] = {default = {},description = "Filter documents to be checked with Grammarly.",items = {properties = {language = {description = "A language id, like `typescript`.",type = "string"},pattern = {description = "A glob pattern, like `*.{md,txt}`.",type = "string"},scheme = {description = "A Uri scheme, like `file` or `untitled`.",type = "string"}},type = "object"},required = true,type = "array"}},title = "Grammarly"}