-- THIS FILE IS GENERATED. DO NOT EDIT MANUALLY.
-- stylua: ignore start
return {properties = {["elmLS.disableElmLSDiagnostics"] = {default = false,description = "Disable linting diagnostics from the language server.",scope = "window",type = "boolean"},["elmLS.elmFormatPath"] = {default = "",description = "The path to your elm-format executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.",scope = "window",type = "string"},["elmLS.elmPath"] = {default = "",description = "The path to your elm executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.",scope = "window",type = "string"},["elmLS.elmReviewDiagnostics"] = {default = "off",description = "Set severity or disable linting diagnostics for elm-review.",enum = { "off", "warning", "error" },scope = "window",type = "string"},["elmLS.elmReviewPath"] = {default = "",description = "The path to your elm-review executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.",scope = "window",type = "string"},["elmLS.elmTestPath"] = {default = "",description = "The path to your elm-test executable. Should be empty by default, in that case it will assume the name and try to first get it from a local npm installation or a global one. If you set it manually it will not try to load from the npm folder.",scope = "window",type = "string"},["elmLS.elmTestRunner.showElmTestOutput"] = {description = "Show output of elm-test as terminal task",scope = "resource",type = "boolean"},["elmLS.onlyUpdateDiagnosticsOnSave"] = {default = false,description = "Only update compiler diagnostics on save, not on document change.",scope = "window",type = "boolean"},["elmLS.skipInstallPackageConfirmation"] = {default = false,description = "Skips confirmation for the Install Package code action.",scope = "window",type = "boolean"},["elmLS.trace.server"] = {default = "off",description = "Traces the communication between VS Code and the language server.",enum = { "off", "messages", "verbose" },scope = "window",type = "string"}},title = "Elm",type = "object"}