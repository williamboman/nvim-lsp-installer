-- THIS FILE IS GENERATED. DO NOT EDIT MANUALLY.
-- stylua: ignore start
return {properties = {["vetur.completion.autoImport"] = {default = true,description = "Include completion for module export and auto import them",type = "boolean"},["vetur.completion.scaffoldSnippetSources"] = {default = {user = "üóíÔ∏è",vetur = "‚úå",workspace = "üíº"},description = 'Where Vetur source Scaffold Snippets from and how to indicate them. Set a source to "" to disable it.\n\n- workspace: `<WORKSPACE>/.vscode/vetur/snippets`.\n- user: `<USER-DATA-DIR>/User/snippets/vetur`.\n- vetur: Bundled in Vetur.\n\nThe default is:\n```\n"vetur.completion.scaffoldSnippetSources": {\n  "workspace": "üíº",\n  "user": "üóíÔ∏è",\n  "vetur": "‚úå"\n}\n```\n\nAlternatively, you can do:\n\n```\n"vetur.completion.scaffoldSnippetSources": {\n  "workspace": "(W)",\n  "user": "(U)",\n  "vetur": "(V)"\n}\n```\n\nRead more: https://vuejs.github.io/vetur/snippet.html.',properties = {user = {default = "üóíÔ∏è",description = "Show Scaffold Snippets from `<USER-DATA-DIR>/User/snippets/vetur`.",type = "string"},vetur = {default = "‚úå",description = "Show Scaffold Snippets bundled in Vetur.",type = "string"},workspace = {default = "üíº",description = "Show Scaffold Snippets from `<WORKSPACE>/.vscode/vetur/snippets`.",type = "string"}},type = "object"},["vetur.completion.tagCasing"] = {default = "kebab",description = "Casing conversion for tag completion",enum = { "initial", "kebab" },enumDescriptions = { "use the key in `components: {...}` as is for tag completion and do not force any casing", "kebab-case completion for <my-tag>" },type = "string"},["vetur.dev.logLevel"] = {default = "INFO",description = "Log level for VLS",enum = { "INFO", "DEBUG" },enumDescriptions = { "Only log info messages. This is the default.", "Log info and debug messages." },type = "string"},["vetur.dev.vlsPath"] = {description = "Path to vls for Vetur developers. There are two ways of using it. \n\n1. Clone vuejs/vetur from GitHub, build it and point it to the ABSOLUTE path of `/server`.\n2. `yarn global add vls` and point Vetur to the installed location (`yarn global dir` + node_modules/vls)",scope = "machine",type = "string"},["vetur.dev.vlsPort"] = {default = -1,description = "The port that VLS listens to. Can be used for attaching to the VLS Node process for debugging / profiling.",type = "number"},["vetur.experimental.templateInterpolationService"] = {default = false,description = "Enable template interpolation service that offers hover / definition / references in Vue interpolations.",type = "boolean"},["vetur.format.defaultFormatter.css"] = {default = "prettier",description = "Default formatter for <style> region",enum = { "none", "prettier" },enumDescriptions = { "disable formatting", "css formatter using css parser from prettier" },type = "string"},["vetur.format.defaultFormatter.html"] = {default = "prettier",description = "Default formatter for <template> region",enum = { "none", "prettyhtml", "js-beautify-html", "prettier" },enumDescriptions = { "disable formatting", "üöß [DEPRECATED] prettyhtml", "html formatter of js-beautify", "prettier" },type = "string"},["vetur.format.defaultFormatter.js"] = {default = "prettier",description = "Default formatter for <script> region",enum = { "none", "prettier", "prettier-eslint", "vscode-typescript" },enumDescriptions = { "disable formatting", "js formatter from prettier", "prettier-eslint", "js formatter from TypeScript" },type = "string"},["vetur.format.defaultFormatter.less"] = {default = "prettier",description = "Default formatter for <style lang='less'> region",enum = { "none", "prettier" },enumDescriptions = { "disable formatting", "less formatter using postcss parser from prettier" },type = "string"},["vetur.format.defaultFormatter.postcss"] = {default = "prettier",description = "Default formatter for <style lang='postcss'> region",enum = { "none", "prettier" },enumDescriptions = { "disable formatting", "postcss formatter using css parser from prettier" },type = "string"},["vetur.format.defaultFormatter.pug"] = {default = "prettier",description = "Default formatter for <template lang='pug'> region",enum = { "none", "prettier" },enumDescriptions = { "disable formatting", "prettier" },type = "string"},["vetur.format.defaultFormatter.sass"] = {default = "sass-formatter",description = "Default formatter for <style lang='sass'> region",enum = { "none", "sass-formatter" },enumDescriptions = { "disable formatting", "sass formatter" },type = "string"},["vetur.format.defaultFormatter.scss"] = {default = "prettier",description = "Default formatter for <style lang='scss'> region",enum = { "none", "prettier" },enumDescriptions = { "disable formatting", "scss formatter using scss parser from prettier" },type = "string"},["vetur.format.defaultFormatter.stylus"] = {default = "stylus-supremacy",description = "Default formatter for <style lang='stylus'> region",enum = { "none", "stylus-supremacy" },enumDescriptions = { "disable formatting", "stylus formatter from stylus-supremacy" },type = "string"},["vetur.format.defaultFormatter.ts"] = {default = "prettier",description = "Default formatter for <script> region",enum = { "none", "prettier", "prettier-tslint", "vscode-typescript" },enumDescriptions = { "disable formatting", "ts formatter using typescript parser from prettier", "ts formatter from TypeScript" },type = "string"},["vetur.format.defaultFormatterOptions"] = {default = {["js-beautify-html"] = {wrap_attributes = "force-expand-multiline"},prettyhtml = {printWidth = 100,singleQuote = false,sortAttributes = false,wrapAttributes = false}},description = "Options for all default formatters",properties = {["js-beautify-html"] = {description = "Options for js-beautify",type = "object"},prettier = {description = "Global prettier config used by prettier formatter. Used by `prettier` and `prettier-eslint`.\n\nVetur will prefer a prettier config file at home directory if one exists.",properties = vim.empty_dict(),type = "object"},prettyhtml = {description = "Options for prettyhtml",properties = {printWidth = {default = 100,description = "Maximum amount of characters allowed per line",type = "number"},singleQuote = {default = false,description = "Whether to use single quotes by default",type = "boolean"},sortAttributes = {default = false,description = "Whether to sort attributes",type = "boolean"},wrapAttributes = {default = false,description = "Whether to wrap attributes",type = "boolean"}},type = "object"}},type = "object"},["vetur.format.enable"] = {default = true,description = "Enable/disable the Vetur document formatter.",type = "boolean"},["vetur.format.options.tabSize"] = {default = 2,description = "Number of spaces per indentation level. Inherited by all formatters.",type = "number"},["vetur.format.options.useTabs"] = {default = false,description = "Use tabs for indentation. Inherited by all formatters.",type = "boolean"},["vetur.format.scriptInitialIndent"] = {default = false,description = "Whether to have initial indent for <script> region",type = "boolean"},["vetur.format.styleInitialIndent"] = {default = false,description = "Whether to have initial indent for <style> region",type = "boolean"},["vetur.grammar.customBlocks"] = {default = {docs = "md",i18n = "json"},description = "Mapping from custom block tag name to language name. Used for generating grammar to support syntax highlighting for custom blocks.",type = "object"},["vetur.ignoreProjectWarning"] = {default = false,description = "Vetur will warn about not setup correctly for the project. You can disable it.",scope = "application",type = "boolean"},["vetur.languageFeatures.codeActions"] = {default = true,description = "Whether to enable codeActions",type = "boolean"},["vetur.languageFeatures.semanticTokens"] = {default = true,description = "Whether to enable semantic highlighting. Currently only works for typescript",type = "boolean"},["vetur.languageFeatures.updateImportOnFileMove"] = {default = true,description = "Whether to automatic updating import path when rename or move a file",type = "boolean"},["vetur.trace.server"] = {default = "off",description = "Traces the communication between VS Code and Vue Language Server.",enum = { "off", "messages", "verbose" },type = "string"},["vetur.underline.refValue"] = {default = true,description = "Enable underline `.value` when using composition API.",type = "boolean"},["vetur.useWorkspaceDependencies"] = {default = false,description = "Use dependencies from workspace. Support for TypeScript, Prettier, @starptech/prettyhtml, prettier-eslint, prettier-tslint, stylus-supremacy, @prettier/plugin-pug.",scope = "application",type = "boolean"},["vetur.validation.interpolation"] = {default = true,description = "Validate interpolations in <template> region using TypeScript language service",type = "boolean"},["vetur.validation.script"] = {default = true,description = "Validate js/ts in <script>",type = "boolean"},["vetur.validation.style"] = {default = true,description = "Validate css/scss/less/postcss in <style>",type = "boolean"},["vetur.validation.template"] = {default = true,description = "Validate vue-html in <template> using eslint-plugin-vue",type = "boolean"},["vetur.validation.templateProps"] = {default = false,description = "Validate props usage in <template> region. Show error/warning for not passing declared props to child components and show error for passing wrongly typed interpolation expressions",type = "boolean"}},title = "Vetur"}