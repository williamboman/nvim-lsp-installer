*nvim-lsp-installer* Semi-opinionated companion plugin for nvim-lspconfig.

Minimum version of neovim: 0.5.0

Author: William Boman <william@redwill.se>

==============================================================================
INTRODUCTION                                *nvim-lsp-installer-introduction*

Semi-opinionated companion plugin for nvim-lspconfig. It comes with all
batteries included, or at least to the extent possible.

Requires:
- neovim `nightly (>= 0.5.0)`
- neovim/nvim-lspconfig (https://github.com/neovim/nvim-lspconfig)
- (optional) Node.js LTS (https://nodejs.org/). Some LSP servers will need a
  Node runtime in order to be installed.

==============================================================================
QUICK START                                   *nvim-lsp-installer-quickstart*

Install a language server via `:LspInstall`, for example: >

    :LspInstall tsserver
<

Then, somewhere in your initialization script (see `:h init.lua`): >

    function common_on_attach(client, bufnr)
        -- .. set up keymaps, etc.
    end

    local installed_servers = lsp_installer.get_installed_servers()

    for _, server in pairs(installed_servers) do
        opts = {
            on_attach = common_on_attach,
        }

        -- (optional) Customize the options passed to the server
        -- if server.name == "tsserver" then
        --     opts.root_dir = function() ... end
        -- end

        server:setup(opts)
    end
<

==============================================================================
COMMANDS                                        *nvim-lsp-installer-commands*

                                                                *:LspInstall*
:LspInstall {server_name}

Installs a language server

                                                              *:LspUninstall*
:LspUninstall {server_name}

Uninstalls a language server.

                                                           *:LspUninstallAll*
:LspUninstallAll

Uninstalls all installed language servers.

                                                         *:LspPrintInstalled*
:LspPrintInstalled

Prints all installed language servers.


==============================================================================
Lua module: nvim-lsp-installer                                *lsp_installer*

                                      *lsp_installer.get_available_servers()*
get_available_servers()
        Return: ~
            |lsp_installer.Server|[] A list containing all available language servers.

                                      *lsp_installer.get_installed_servers()*
get_installed_servers()
        Return: ~
            |lsp_installer.Server|[] A list of servers that are currently installed.

                                    *lsp_installer.get_uninstalled_servers()*
get_uninstalled_servers()
        Return: ~
            |lsp_installer.Server|[] A list of servers that are not installed.

                                                 *lsp_installer.get_server()*
get_server({server_name})
        Parameters: ~
            {server_name} (string) The server to install.

        Return: ~
            ok: boolean, server: |lsp_installer.Server| 

        Example: ~
>
            local lsp_installer = require'nvim-lsp-installer'
            local ok, rust_server = lsp_installer.get_server("rust_analyzer")
            if ok then
                rust_server.install()
            end
<

                                                    *lsp_installer.install()*
install({server_name})
        Installs the provided {server_name}. If {server_name} is already installed, it
        is reinstalled.

        Parameters: ~
            {server_name} (string) The server to install.

                                                  *lsp_installer.uninstall()*
uninstall({server_name})
        Uninstalls the provided {server_name}.

        Parameters: ~
            {server_name} (string) The server to uninstall.

==============================================================================
Lua module: nvim-lsp-installer.server                  *lsp_installer.server*

                                                       *lsp_installer.Server*
class: Server
        This class enables installing, uninstalling, and setting up language
        servers.

        Methods: ~
            - setup({opts})
                    Sets up the language server. This has the same function
                    signature as the setup function in nvim-lspconfig.

                    See |lspconfig-custom-config| for more information on
                    {opts}.

            - get_default_options()
                    Returns a deep copy of the default options provided to
                    lspconfig in the setup({opts}) method.

            - is_installed()
                    Returns {true} is server is installed, else returns {false}.

            - install()
                    Installs this instance of an LSP server.

            - uninstall()
                    Uninstalls this instance of an LSP server.

 vim:tw=78:ft=help:norl:
